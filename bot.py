import os
import asyncio
from aiogram import Bot, Dispatcher, Router, F
from aiogram.enums.parse_mode import ParseMode
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    Message,
    CallbackQuery,
)
from dotenv import load_dotenv

load_dotenv()

# ==== –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ====
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —á–∞—Ç/—é–∑–µ—Ä, –∫—É–¥–∞ —Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
if not BOT_TOKEN:
    raise RuntimeError("–ü–æ–ª–æ–∂–∏ TELEGRAM_BOT_TOKEN –≤ .env –∏–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")

bot = Bot(BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# ==== —Å–æ—Å—Ç–æ—è–Ω–∏—è ====
class Form(StatesGroup):
    gender = State()
    source = State()
    nicotine = State()
    duration = State()
    email = State()

# ==== –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ====

def kb_gender() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë® –ú—É–∂—á–∏–Ω–∞", callback_data="g_male")],
        [InlineKeyboardButton(text="üë© –ñ–µ–Ω—â–∏–Ω–∞", callback_data="g_female")],
    ])


def kb_source() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç –¥—Ä—É–∑–µ–π", callback_data="s_friends")],
        [InlineKeyboardButton(text="–ò–∑ –¥—Ä—É–≥–∏—Ö –∫–∞–Ω–∞–ª–æ–≤", callback_data="s_channels")],
    ])


def kb_nicotine() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–°–∏–≥–∞—Ä–µ—Ç—ã", callback_data="n_cigs")],
        [InlineKeyboardButton(text="–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ –∏—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", callback_data="n_disposables")],
        [InlineKeyboardButton(text="–°–Ω—é—Å", callback_data="n_snus")],
        [InlineKeyboardButton(text="–ù–∞–≥—Ä–µ–≤–∞—Ç–µ–ª–∏ —Ç–∞–±–∞–∫–∞", callback_data="n_heaters")],
        [InlineKeyboardButton(text="–í–µ–π–ø—ã", callback_data="n_vapes")],
    ])


def kb_duration() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ú–µ–Ω—å—à–µ –≥–æ–¥–∞", callback_data="d_<1")],
        [InlineKeyboardButton(text="1‚Äì3 –≥–æ–¥–∞", callback_data="d_1-3")],
        [InlineKeyboardButton(text="3‚Äì5 –ª–µ—Ç", callback_data="d_3-5")],
        [InlineKeyboardButton(text="5 –ª–µ—Ç –∏ –±–æ–ª–µ–µ", callback_data="d_5+")],
    ])


def kb_one(text: str, cb: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=text, callback_data=cb)]])

# ==== —Ç–µ–∫—Å—Ç—ã ====
CONSENT_TEXT = """–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ: –≤–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π e-mail ‚úâÔ∏è
–ù–∏–∫–∞ –Ω–µ –ª—é–±–∏—Ç —Å–ø–∞–º –∏ –Ω–µ —à–ª—ë—Ç –ª–∏—à–Ω–µ–≥–æ ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã–µ –ø–∏—Å—å–º–∞ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ —Ç–≤–æ–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.

–í–≤–æ–¥—è –ø–æ—á—Ç—É, —Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—à—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
"""

INTRO_1 = """–Ø ‚Äî –≤—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ù–∏–∫–∞ ü§ñ
–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ –∞–¥–¥–∏–∫—Ç–æ–ª–æ–≥–∞ –∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ –ù–ú–ò–¶ –∏–º. –ë–µ—Ö—Ç–µ—Ä–µ–≤–∞, –∞ —Ç–∞–∫–∂–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏–∑ –°–∫–æ–ª–∫–æ–≤–æ.
"""

INTRO_2 = """–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —Å–¥–µ–ª–∞–ª–∏ –≤—Å—ë, —á—Ç–æ–±—ã —è –ø–æ–∑–∞–±–æ—Ç–∏–ª–∞—Å—å –æ —Ç–≤–æ—ë–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø–æ–º–æ–≥–ª–∞ –±—Ä–æ—Å–∏—Ç—å –Ω–∏–∫–æ—Ç–∏–Ω.
–Ø –æ–±—É—á–µ–Ω–∞ –Ω–∞ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: –±–æ–ª–µ–µ 200 –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, 15 —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫, –æ–ø—ã—Ç –ª–µ—á–µ–Ω–∏—è –∑–∞ 50 –ª–µ—Ç.
"""

INTRO_3 = """–ó–∞–∏–Ω—Ç—Ä–∏–≥–æ–≤–∞–ª–∞? –≠—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –∏–∑–±–∞–≤–ª–µ–Ω–∏—é –æ—Ç –Ω–∏–∫–æ—Ç–∏–Ω–æ–≤–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ 30 –¥–Ω–µ–π ‚Äî –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–∞–∂–¥–æ–º—É.
–¢—ã —Å–º–æ–∂–µ—à—å –±—Ä–æ—Å–∏—Ç—å –±–µ–∑ —Å—Ä—ã–≤–æ–≤, –±–µ–∑ –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞ –∏ –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–∏–∫–æ—Ç–∏–Ω–∞.
"""

INTRO_4 = """–¢—ã –±—Ä–æ—Å–∏—à—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –±–µ–∑ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π:
‚Ä¢ –±–µ–∑ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è –∏ –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞
‚Ä¢ –±–µ–∑ —Ä–µ—Ü–∏–¥–∏–≤–æ–≤ –∏ —Å—Ä—ã–≤–æ–≤ –≤ –±—É–¥—É—â–µ–º
‚Ä¢ –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –¥—Ä—É–≥–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–∏–∫–æ—Ç–∏–Ω–∞
‚Ä¢ —ç—Ñ—Ñ–µ–∫—Ç –¥–∞–∂–µ –ø–æ—Å–ª–µ –∞–ª–∫–æ–≥–æ–ª—è
"""

INTRO_5 = """–ü–ª–∞–Ω –ø—Ä–æ–≥—Ä–∞–º–º—ã: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π –ø–ª–∞–Ω –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —à–∞–≥–æ–≤.
–°–ª–µ–¥—É—è –µ–º—É, –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–µ–∞–ª—å–Ω–µ–µ –∏ –ø—Ä–æ—â–µ.
"""

INTRO_6 = """–£ –Ω–∞—Å –¥–µ—Å—è—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –∏ –æ—Ç–∑—ã–≤–æ–≤. –°–∫–æ—Ä–æ –ø–æ–∫–∞–∂—É –ø—Ä–∏–º–µ—Ä—ã –¥–Ω—è –∏ –¥–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç—É–ø.
"""

RESULTS_TEXT = """–ö–æ–Ω–µ—á–Ω–æ –µ—Å—Ç—å! –ò —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–µ–Ω—å –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–µ, –∫–∞–∫ –ø–æ –º–Ω–µ üôÇ
–ú—ã —Å–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –≤–∏–¥–∏–º —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π.

–ì–æ—Ç–æ–≤ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ?
"""

ARTICLE_TEXT = """–ê —ç—Ç–æ ‚Äî –Ω–µ–±–æ–ª—å—à–∞—è —Å—Ç–∞—Ç—å—è –æ —Ç–æ–º, –∫–∞–∫ –æ—Ç–∫–∞–∑ –æ—Ç –Ω–∏–∫–æ—Ç–∏–Ω–∞ –º–µ–Ω—è–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–º –∏ –∂–∏–∑–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
–ü—Ä–æ—á–∏—Ç–∞—Ç—å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://clck.ru/3NGJN2

–ò–¥—ë–º –¥–∞–ª—å—à–µ?
"""

PRICING_TEXT = """–ï—Å–ª–∏ —Ç–µ–±–µ –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –ª–æ–≥–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞?

–ú—ã –¥–æ–ª–≥–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–ª–∏ —Å–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç–µ–ª–µ–π (–∂–≤–∞—á–∫–∏/–ø–ª–∞—Å—Ç—ã—Ä–∏) –∏ —Ä–µ—à–∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ü–µ–Ω—É –¥–æ—Å—Ç—É–ø–Ω–æ–π.
–û–±—ã—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å ‚Äî 1 990 ‚ÇΩ. –ù–æ —Å–µ–π—á–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–ø–µ—Ü-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî 1 390 ‚ÇΩ.

–≠—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∫–∞: –æ–¥–∏–Ω —Ä–∞–∑ –æ–ø–ª–∞—Ç–∏–ª ‚Äî –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Å—Ç–∞—é—Ç—Å—è —Å —Ç–æ–±–æ–π –Ω–∞–≤—Å–µ–≥–¥–∞. –û—Å—Ç–∞—ë—à—å—Å—è —Å–æ –º–Ω–æ–π?
"""

BENEFITS_TEXT = """–í–æ –≤—Ä–µ–º—è –Ω–∞—à–µ–π 30-–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—ã –ø–æ–ª—É—á–∏—à—å:
‚Ä¢ 15 –ª—É—á—à–∏—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫, —á—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –Ω–∏–∫–æ—Ç–∏–Ω–∞
‚Ä¢ –ó–∞–Ω–∏–º–∞–µ—Ç 10‚Äì15 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å
‚Ä¢ –ü–æ—Å—Ç—Ä–æ–∏—à—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
‚Ä¢ –ë–æ–ª–µ–µ 200 —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è

–ù–∞–∂–∏–º–∞—è ¬´–û–ø–ª–∞—Ç–∏—Ç—å¬ª ‚Äî —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏.
"""

REMIND_TEXT = """–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π, –ø–ª–∞–≤–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –¥–∞–ª—å–Ω–µ–π—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞.
–ö–æ—Ä–æ—Ç–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è, –¥–Ω–µ–≤–Ω–∏–∫, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
"""

REVIEWS_TEXT = """–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:

‚Ä¢ ¬´–Ø –±—Ä–æ—Å–∞–ª–∞ –∫—É—Ä–∏—Ç—å —Ä–∞–∑ —á–µ—Ç—ã—Ä–µ. –í —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤–ø–µ—Ä–≤—ã–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å¬ª
‚Ä¢ ¬´–ó–¥–µ—Å—å –Ω–µ –ø—Ä–æ—Å—Ç–æ ‚Äú–¥–µ—Ä–∂–∞–ª—Å—è‚Äù, –∞ —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–ª —Å –≥–æ–ª–æ–≤–æ–π. –°–ø–∞—Å–∏–±–æ, –ù–∏–∫–∞!¬ª

–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é?
"""

DAY_TEXT = """<b>5 –¥–µ–Ω—å ‚Äî –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã</b>
–ß—Ç–µ–Ω–∏–µ –∑–∞–π–º—ë—Ç ~5 –º–∏–Ω—É—Ç.

–ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–≤–æ–º—É –∑–∞–¥–∞–Ω–∏—é?
"""

TASK1_TEXT = """–ó–∞–¥–∞–Ω–∏–µ 1. –ó–∞–ø–∏—à–∏ 3 –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–º–∏ –∑–∞–º–µ–Ω–∏—à—å
–ø—Ä–∏–≤—ã—á–Ω—ã–π —Ä–∏—Ç—É–∞–ª —Å –Ω–∏–∫–æ—Ç–∏–Ω–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–¥–∞, –¥—ã—Ö–∞–Ω–∏–µ 4-7-8, –∫–æ—Ä–æ—Ç–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞).
"""


# ==== —Ö–µ–Ω–¥–ª–µ—Ä—ã ====
@router.message(CommandStart())
async def start(msg: Message, state: FSMContext):
    await msg.answer("–í–∞—à –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç <b>–ù–∏–∫–∞</b> –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ‚Ä¶\n–ó–∞–≥—Ä—É–∂–∞—é—Å—å‚Ä¶")
    await asyncio.sleep(5)  # –ø–∞—É–∑–∞ –∫–∞–∫ –≤ –±–ª–æ–∫–µ ¬´–ó–∞–¥–µ—Ä–∂–∫–∞¬ª

    await state.set_state(Form.gender)
    await msg.answer(
        f"–ü—Ä–∏–≤–µ—Ç, <b>{msg.from_user.first_name or '–¥—Ä—É–≥'}</b>!\n"
        "–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è ü§ó\n–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?",
        reply_markup=kb_gender(),
    )


@router.callback_query(Form.gender, F.data.startswith("g_"))
async def gender_chosen(call: CallbackQuery, state: FSMContext):
    gender = call.data.split("_", 1)[1]  # male / female
    await state.update_data(gender=gender)
    await call.message.edit_reply_markup()

    await state.set_state(Form.source)
    await call.message.answer("–°—É–ø–µ—Ä! –ö–∞–∫ —Ç—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª?", reply_markup=kb_source())


@router.callback_query(Form.source, F.data.startswith("s_"))
async def source_chosen(call: CallbackQuery, state: FSMContext):
    source = call.data.split("_", 1)[1]  # friends / channels
    await state.update_data(source=source)
    await call.message.edit_reply_markup()

    await state.set_state(Form.nicotine)
    await call.message.answer("–ö–∞–∫–æ–π —Ç–∏–ø –Ω–∏–∫–æ—Ç–∏–Ω–∞ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å?", reply_markup=kb_nicotine())


@router.callback_query(Form.nicotine, F.data.startswith("n_"))
async def nicotine_chosen(call: CallbackQuery, state: FSMContext):
    nicotine = call.data.split("_", 1)[1]
    await state.update_data(nicotine=nicotine)
    await call.message.edit_reply_markup()

    await state.set_state(Form.duration)
    await call.message.answer("–°–ø–∞—Å–∏–±–æ! –ö–∞–∫ –¥–∞–≤–Ω–æ —Ç—ã –Ω–∞—á–∞–ª(–∞) —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å —Ç–∞–±–∞—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è?", reply_markup=kb_duration())


@router.callback_query(Form.duration, F.data.startswith("d_"))
async def duration_chosen(call: CallbackQuery, state: FSMContext):
    duration = call.data.split("_", 1)[1]
    await state.update_data(duration=duration)
    await call.message.edit_reply_markup()

    await state.set_state(Form.email)
    await call.message.answer(CONSENT_TEXT)


@router.message(Form.email)
async def email_received(msg: Message, state: FSMContext):
    email = msg.text.strip()
    if "@" not in email or "." not in email or len(email) < 5:
        return await msg.answer("–≠—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ—á—Ç—É! –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")

    data = await state.update_data(email=email)

    # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω ADMIN_CHAT_ID)
    if ADMIN_CHAT_ID:
        try:
            user = msg.from_user
            gender_txt = "–ú—É–∂—á–∏–Ω–∞" if data.get("gender") == "male" else "–ñ–µ–Ω—â–∏–Ω–∞"
            source_txt = "–û—Ç –¥—Ä—É–∑–µ–π" if data.get("source") == "friends" else "–ò–∑ –¥—Ä—É–≥–∏—Ö –∫–∞–Ω–∞–ª–æ–≤"
            await bot.send_message(
                int(ADMIN_CHAT_ID),
                (
                    "üë§ <b>–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞</b>\n"
                    f"ID: <code>{user.id}</code> (@{user.username or '‚Äî'})\n"
                    f"–ò–º—è: {user.full_name}\n"
                    f"–ü–æ–ª: {gender_txt}\n–ò—Å—Ç–æ—á–Ω–∏–∫: {source_txt}\n"
                    f"–ù–∏–∫–æ—Ç–∏–Ω: {data.get('nicotine')} | –°—Ç–∞–∂: {data.get('duration')}\n"
                    f"Email: {email}"
                ),
            )
        except Exception:
            pass

    # –º–∏–Ω–∏-–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ
    await msg.answer("–¢–µ–ø–µ—Ä—å –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –≤ –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ‚Ä¶ ‚ú®")
    await asyncio.sleep(2)

    # —Å—Ç–∞—Ä—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
    await send_intro_1(msg.chat.id)

    await state.clear()


# ====== —Å–µ—Ä–∏—è —ç–∫—Ä–∞–Ω–æ–≤ ¬´–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ¬ª ======
async def send_intro_1(chat_id: int):
    await bot.send_message(chat_id, INTRO_1, reply_markup=kb_one("–ê —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "i_abilities"))


@router.callback_query(F.data == "i_abilities")
async def intro_abilities(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(INTRO_2, reply_markup=kb_one("–ê —á—Ç–æ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞?", "i_program"))


@router.callback_query(F.data == "i_program")
async def intro_program(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(INTRO_3, reply_markup=kb_one("–ò —á—Ç–æ –∂–µ –≥–ª–∞–≤–Ω–æ–µ?", "i_main"))


@router.callback_query(F.data == "i_main")
async def intro_main(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(INTRO_4, reply_markup=kb_one("–ù–æ –∫–∞–∫?", "i_how"))


@router.callback_query(F.data == "i_how")
async def intro_how(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(INTRO_5, reply_markup=kb_one("–ê –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?", "i_results"))


@router.callback_query(F.data == "i_results")
async def intro_results(call: CallbackQuery):
    await call.message.edit_reply_markup()
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π ¬´–¥–∞–ª—å—à–µ¬ª
    await call.message.answer(RESULTS_TEXT, reply_markup=kb_one("–í–ø–µ—á–∞—Ç–ª—è–µ—Ç, –¥–∞–≤–∞–π –¥–∞–ª—å—à–µ", "go_article"))


@router.callback_query(F.data == "go_article")
async def go_article(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(ARTICLE_TEXT, reply_markup=kb_one("–î–∞–ª—å—à–µ", "go_pricing"))


@router.callback_query(F.data == "go_pricing")
async def go_pricing(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(PRICING_TEXT, reply_markup=kb_one("–î–∞!", "pay_yes"))


@router.callback_query(F.data == "pay_yes")
async def pay_yes(call: CallbackQuery):
    await call.message.edit_reply_markup()
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∏–∑ 4 –ø—É–Ω–∫—Ç–æ–≤: –≤–ø–µ—Ä—ë–¥, –æ—Ç–∑—ã–≤—ã, –Ω–∞–ø–æ–º–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –ø—Ä–∏–º–µ—Ä –¥–Ω—è
    await show_after_yes_menu(call.message.chat.id)
    return

async def show_after_yes_menu(chat_id: int):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í–ø–µ—Ä—ë–¥ üî•", callback_data="go_offer")],
        [InlineKeyboardButton(text="–ê –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã?", callback_data="show_reviews")],
        [InlineKeyboardButton(text="–ù–∞–ø–æ–º–Ω–∏, –∫–∞–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="remind_program")],
        [InlineKeyboardButton(text="–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä –¥–Ω—è", callback_data="sample_day")],
    ])
    await bot.send_message(
        chat_id,
        """–ß—Ç–æ–±—ã –∫—É—Ä–µ–Ω–∏–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –ø—Ä–æ—à–ª–æ–º, —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.

        "–°–∫–æ—Ä–µ–µ –∂–º–∏ \"–í–ø–µ—Ä—ë–¥ üî•\" ‚Äî –∏ –æ—Ç–ø—Ä–∞–≤–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É!""",
        reply_markup=kb,
    )

@router.callback_query(F.data == "go_offer")
async def go_offer(call: CallbackQuery):
    await call.message.edit_reply_markup()
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∞ 1390‚ÇΩ üî•", callback_data="pay_1390")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu_back")],
    ])
    await call.message.answer(BENEFITS_TEXT, reply_markup=kb)


@router.callback_query(F.data == "remind_program")
async def remind_program(call: CallbackQuery):
    await call.message.edit_reply_markup()
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∞ 1390‚ÇΩ üî•", callback_data="pay_1390")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu_back")],
    ])
    await call.message.answer(REMIND_TEXT, reply_markup=kb)


@router.callback_query(F.data == "show_reviews")
async def show_reviews(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(REVIEWS_TEXT, reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu_back")]]))

@router.callback_query(F.data == "sample_day")
async def sample_day(call: CallbackQuery):
    await call.message.edit_reply_markup()
    kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ó–∞–¥–∞–Ω–∏–µ 1", callback_data="day_task1")]])
    await call.message.answer(DAY_TEXT, reply_markup=kb)

@router.callback_query(F.data == "day_task1")
async def day_task1(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(TASK1_TEXT)
    await asyncio.sleep(5)
    await call.message.answer(
        "–í–µ—Ä–Ω—ë–º—Å—è –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ?", reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü–æ–∂–∞–ª—É–π –¥–∞, –ø–æ—Ä–∞ –Ω–∞—á–∞—Ç—å", callback_data="menu_back")]])
    )

# --- –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –ø–æ—Å–ª–µ ¬´–î–∞!¬ª ---
@router.callback_query(F.data == "menu_back")
async def menu_back(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await show_after_yes_menu(call.message.chat.id)

# --- –û–ø–ª–∞—Ç–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞) ---
@router.callback_query(F.data == "pay_1390")
async def pay_1390(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer("–ü–∞—Ä—É –º–∏–Ω—É—Ç! –ü—Ä–æ–≤–µ—Ä—è—é –æ–ø–ª–∞—Ç—É ‚òëÔ∏è")
    await asyncio.sleep(3)
    await call.message.answer(
        "–û–ø–ª–∞—Ç—É –ø–æ–¥–∫–ª—é—á–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ. –ü–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä –¥–Ω—è –∏–ª–∏ –æ—Ç–∑—ã–≤—ã.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu_back")]])
    )


async def intro_results(call: CallbackQuery):
    pass  # –∑–∞–≥–ª—É—à–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(INTRO_6)
    # —Å—é–¥–∞ –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º: –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã / –ø—Ä–∏–º–µ—Ä –¥–Ω—è / –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∏—Ç—å¬ª


# ==== –∑–∞–ø—É—Å–∫ ====

def main():
    import logging
    logging.basicConfig(level=logging.INFO)
    asyncio.run(dp.start_polling(bot))


if __name__ == "__main__":
    main()
